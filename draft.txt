



DNSOP                                                       J. Lundstrom
Internet-Draft                                                       .SE
Intended status: Experimental                                 W. Mekking
Expires: November 17, 2014                                    NLnet Labs
                                                            May 16, 2014


                    DNSSEC Key and Signing Policies
                      draft-mekking-dnsop-kasp-00

Abstract

   This document describes how key policies should look like.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on November 17, 2014.

Copyright Notice

   Copyright (c) 2014 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.






Lundstrom & Mekking     Expires November 17, 2014               [Page 1]

Internet-Draft                    KASP                          May 2014


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Key Words . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.2.  Terminology . . . . . . . . . . . . . . . . . . . . . . .   2
     1.3.  Data Modeling . . . . . . . . . . . . . . . . . . . . . .   3
   2.  KASP Contents . . . . . . . . . . . . . . . . . . . . . . . .   3
     2.1.  Preamble  . . . . . . . . . . . . . . . . . . . . . . . .   3
       2.1.1.  Policies  . . . . . . . . . . . . . . . . . . . . . .   3
         2.1.1.1.  Signatures  . . . . . . . . . . . . . . . . . . .   3
         2.1.1.2.  Authenticated Denial of Existence . . . . . . . .   5
         2.1.1.3.  Keys  . . . . . . . . . . . . . . . . . . . . . .   6
         2.1.1.4.  Zone  . . . . . . . . . . . . . . . . . . . . . .   7
         2.1.1.5.  Parent  . . . . . . . . . . . . . . . . . . . . .   8
   3.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   9
     3.1.  Informative References  . . . . . . . . . . . . . . . . .   9
     3.2.  Normative References  . . . . . . . . . . . . . . . . . .   9
   Appendix A.  Changelog  . . . . . . . . . . . . . . . . . . . . .  10

1.  Introduction

   A key and signing policy (KASP) defines a DNSSEC [RFC4033] [RFC4034]
   [RFC4035] policy for one or more zones.

1.1.  Key Words

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY" and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

1.2.  Terminology

   The reader is assumed to be familiar with DNSSEC described in
   [RFC4033] [RFC4034] [RFC4035] and [RFC5155].

   The following terminology is used throughout this document:

   KASP:  Key And Signing Policy, describes a DNSSEC policy that can be
      applied to one or more zones.

   Jitter:  Random value added to the expiration time of signatures to
      ensure that not all signatures expire at the same time.

   A key and signing policy can be expressed in any format.  This
   document uses XML as example.






Lundstrom & Mekking     Expires November 17, 2014               [Page 2]

Internet-Draft                    KASP                          May 2014


1.3.  Data Modeling

   This document reuses the modeling types described in [RFC6020].

2.  KASP Contents

2.1.  Preamble

   All policies MUST be enclosed in a KASP container.

   container KASP {
       ...
   }

   A KASP container MUST contain a sequence of policy entries and MUST
   NOT contain any other modeling types.

2.1.1.  Policies

   Each policy MUST have a "name" leaf which contains the name of the
   policy.  The name is used to link a policy and the zones signed using
   it; each policy MUST have a unique name.  A policy named "default"
   MAY be used to associate with all zones that do not have a policy
   explicitly configured.  A policy MUST have a description associated
   with it.  Furthermore, a policy MUST have the containers Signatures,
   Denial, Keys, Zone and Parent.  These containers are described in the
   forthcoming sections.

   list Policy {
       key "name";
       leaf name { type string; }
       leaf description { type string; }
       container Signatures { ... }
       container Denial { ... }
       container Keys { ... }
       container Zone { ... }
       container Parent { ... }
   }

2.1.1.1.  Signatures

   A Signatures container defines the policy parameters for creating
   RRSIG records and MUST be included.  It MUST contain the following
   leaf nodes: Resign, Refresh, Jitter, InceptionOffset.  It MUST
   contain a Validity container that includes leaf nodes for the
   validity periods of certain type of RRsets.  The Default leaf node
   sets the validity period for all RRsets that do not have a specific




Lundstrom & Mekking     Expires November 17, 2014               [Page 3]

Internet-Draft                    KASP                          May 2014


   leaf node in this Validity container.  The Denial leaf node sets the
   validity period for all NSEC and NSEC3 RRsets.

   The Validity container MUST include leaf nodes Default and Denial and
   MAY include other leaf nodes to differentiate between even more types
   of RRsets.

   container Signatures {
       leaf Resign { type duration; }
       leaf Refresh { type duration; }
       leaf Jitter { type duration; }
       leaf InceptionOffset { type duration; }
       container Validity {
           leaf Default { type duration; }
           leaf Denial { type duration; }
       }
   }

   Here:

   1.  Resign is the re-sign interval, which is the interval when the
       signer MUST re-sign the zone.

   2.  Refresh is the refresh interval, detailing when a signature MUST
       be refreshed.  As signatures are typically valid for much longer
       than the interval between runs of the signer, there is no need to
       re-generate the signatures each time the signer runs.  The
       signature MUST be refreshed when the time until the signature
       expiration is closer than the refresh interval or when the data
       has been changed.  A value of zero (PT0S) MUST be interpreted as
       to refresh the signatures each re-sign interval.

   3.  Jitter is the value added to the expiration time of signatures to
       ensure that not all signatures expire at the same time.  The
       actual value of Jitter to be added MUST be -j + (r % 2j), where j
       is the jitter value from the policy and r a random duration,
       uniformly ranging between -j and j, is added to signature
       validity period to get the signature expiration time.

   4.  InceptionOffset is a duration that MUST be subtracted from the
       time at which a record is signed to give the start time of the
       record.  This is required to allow for clock skew between the
       signing system and the system on which the signature is checked.
       Without it, the possibility exists that the checking system could
       retrieve a signature whose start time is later than the current
       time.





Lundstrom & Mekking     Expires November 17, 2014               [Page 4]

Internet-Draft                    KASP                          May 2014


   5.  Validity groups two or more elements of information related to
       how long the signatures are valid for - Denial is the validity
       period for all NSEC and NSEC3 RRsets, Default is the validity
       period for all other RRset.

   The relationship between these elements is shown [RFC6781],
   Figure 11.

2.1.1.2.  Authenticated Denial of Existence

   Authenticated denial of existence is handled by the <Denial> section,
   as shown in the example below.

   <Denial>
       <NSEC3>
           <TTL>PT3600S</TTL>
           <OptOut/>
           <Resalt>P100D</Resalt>
           <Hash>
               <Algorithm>1</Algorithm>
               <Iterations>5</Iterations>
               <Salt length="8"/>
           </Hash>
       </NSEC3>
   </Denial>

   <Denial> includes one element, either <NSEC3> (as shown above) or
   <NSEC>.  The example above shows the NSEC3 [RFC5155] case.

   NSEC3

   <NSEC3> tells the signer to implement NSEC3 scheme for authenticated
   denial of existence.  The elements are:

   1.  <TTL> - if present, this is the time-to-live value for the
       NSEC3PARAM resource records.  If not present, PT0S (0) will be
       used as TTL.

   2.  <OptOut/> - if present, enable Opt-Out.

   3.  <Resalt> - the interval between generating new salt values for
       the hashing algorithm.

   4.  <Algorithm>, <Iterations> and <Salt> are parameters to the hash
       algorithm.

   NSEC




Lundstrom & Mekking     Expires November 17, 2014               [Page 5]

Internet-Draft                    KASP                          May 2014


   Should, instead, NSEC be used as the authenticated denial of
   existence scheme, the <Denial> element will contain the single
   element <NSEC/>.

2.1.1.3.  Keys

   Parameters relating to keys can be found in the <Keys> section.

   <Keys>

   Common Parameters

   The section starts with a number of parameters relating to both zone-
   signing keys (ZSK) and key-signing keys (KSK):

   <TTL>PT3600S</TTL>
   <RetireSafety>PT3600S</RetireSafety>
   <PublishSafety>PT3600S</PublishSafety>
   <ShareKeys/>
   <Purge>P14D</Purge>

   <TTL> is the time-to-live value for the DNSKEY resource records.
   <PublishSafety> and <RetireSafety> are the publish and retire safety
   margins for the keys.  These intervals are safety margins added to
   calculated timing values to give some extra time to cover unforeseen
   events, e.g. in case external events prevent zone publication.

   If multiple zones are associated with a policy, the presence of
   <ShareKeys/> indicates that a key can be shared between zones.

   If <Purge> is present, keys marked as dead will be automatically
   purged from the database after this interval.

   Key-signing Keys

   Key-Signing Keys

   Parameters for key-signing keys are held in the <KSK> section:

   <KSK>
       <Algorithm length="2048">8</Algorithm>
       <Lifetime>P1Y</Lifetime>
       <Repository>softHSM</Repository>
       <Standby>1</Standby>
       <ManualRollover/>
   </KSK>

   where:



Lundstrom & Mekking     Expires November 17, 2014               [Page 6]

Internet-Draft                    KASP                          May 2014


   1.  <Algorithm> - determines the algorithm used for the key

   2.  <Lifetime> - determines how long the key is used for before it is
       rolled.

   3.  <Repository> - determines the location of the keys.  Keys are
       stored in "repositories"

   4.  <Standby> - if present, determines the number of standby keys
       held in the zone.

   5.  <ManualRollover/> - if present, this indicates that the key
       rollover will only be initiated on the command by the operator.

   Zone-Signing Keys

   Parameters for zone-signing keys are held in the <ZSK> section, and
   have the same meaning as for the KSK:

   <ZSK>
       <Algorithm length="1024">8</Algorithm>
       <Lifetime>P90D</Lifetime>
       <Repository>softHSM</Repository>
       <Standby>1</Standby>
   </ZSK>

   The ZSK information completes the contents of the <Keys> section and
   the keys section can be closed.

   </Keys>

2.1.1.4.  Zone

   General information concerning the zones can be found in the <Zone>
   section:

   <Zone>
       <PropagationDelay>PT9999S</PropagationDelay>
       <SOA>
           <TTL>PT3600S</TTL>
           <Minimum>PT3600S</Minimum>
           <Serial>unixtime</Serial>
       </SOA>
   </Zone>

   <PropagationDelay> is the amount of time needed for information
   changes at the master server for the zone to work its way through to
   all the secondary nameservers.



Lundstrom & Mekking     Expires November 17, 2014               [Page 7]

Internet-Draft                    KASP                          May 2014


   The <SOA> element gives values of parameters for the SOA record in
   the signed zone.

   The SOA values will override values set for the SOA record in the
   input zone file and the serial in signed and unsigned zone is likely
   to go out of sync.

   These SOA values are:

   1.  <TTL> - TTL of the SOA record.

   2.  <Minimum> - value for the SOA MINIMUM parameter.

   3.  <Serial> - the format of the serial number in the signed zone.
       This is one of: counter, datecounter, unixtime, keep.

2.1.1.5.  Parent

   If a DNSSEC zone is in a chain of trust, digest information about the
   KSKs used in the zone will be stored in DS records in the parent
   zone.  To properly roll keys, timing information about the parent
   zone must be configured in the <Parent> section:

   <Parent>
       <PropagationDelay>PT9999S</PropagationDelay>
       <DS>
           <TTL>PT3600S</TTL>
       </DS>
       <SOA>
           <TTL>PT3600S</TTL>
           <Minimum>PT3600S</Minimum>
       </SOA>
   </Parent>

   <PropagationDelay> is the interval between the time a new KSK is
   published in the zone and the time that the DS record appears in the
   parent zone.

   The <DS> tag holds information about the DS record in the parent.  It
   contains a single element, <TTL>, which should be set to the TTL of
   the DS record in the parent zone.

   <SOA> gives information about parameters of the parent's SOA record,
   used by KASP in its calculations.  As before, <TTL> is the TTL of the
   SOA record and <Minimum> is the value of the SOA MINIMUM parameter.

   This is the last section of the policy specification, so the next
   element is the policy closing tag:



Lundstrom & Mekking     Expires November 17, 2014               [Page 8]

Internet-Draft                    KASP                          May 2014


   </Policy>

   If there are any additional policies, they could be entered here,
   starting with <Policy> and ending with </Policy>.  However, in this
   case there are no additional policies, so the file is ended by
   closing the <KASP> tag:

   </KASP>

3.  References

3.1.  Informative References

   [RFC4033]  Arends, R., Austein, R., Larson, M., Massey, D., and S.
              Rose, "DNS Security Introduction and Requirements", RFC
              4033, March 2005.

   [RFC4034]  Arends, R., Austein, R., Larson, M., Massey, D., and S.
              Rose, "Resource Records for the DNS Security Extensions",
              RFC 4034, March 2005.

   [RFC4035]  Arends, R., Austein, R., Larson, M., Massey, D., and S.
              Rose, "Protocol Modifications for the DNS Security
              Extensions", RFC 4035, March 2005.

   [RFC5155]  Laurie, B., Sisson, G., Arends, R., and D. Blacka, "DNS
              Security (DNSSEC) Hashed Authenticated Denial of
              Existence", RFC 5155, March 2008.

   [RFC6781]  Kolkman, O., Mekking, W., and R. Gieben, "DNSSEC
              Operational Practices, Version 2", RFC 6781, December
              2012.

3.2.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC6020]  Bjorklund, M., "YANG - A Data Modeling Language for the
              Network Configuration Protocol (NETCONF)", RFC 6020,
              October 2010.










Lundstrom & Mekking     Expires November 17, 2014               [Page 9]

Internet-Draft                    KASP                          May 2014


Appendix A.  Changelog

   o  Initial version

Authors' Addresses

   Jerry Lundstrom
   .SE
   Ringvagen 1
   Stockholm  1234 AA
   SE

   EMail: jerry@opendnssec.org
   URI:   http://www.iis.se/


   W. (Matthijs) Mekking
   NLnet Labs
   Science Park 400
   Amsterdam  1098 XH
   NL

   EMail: matthijs@nlnetlabs.nl
   URI:   http://www.nlnetlabs.nl/



























Lundstrom & Mekking     Expires November 17, 2014              [Page 10]
