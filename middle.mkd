# Introduction

A key and signing policy (KASP) defines the DNSSEC [](#RFC4033) [](#RFC4034)
[](#RFC4035) policy for one or more zones. 

# Format

A key and signing policy can be expressed in any format. This document
uses XML as example.

## Preamble

All policies are enclosed in a KASP container:	

    <KASP>


## Policy Description

Each policy is included in the &lt;Policy&gt;...&lt;/Policy&gt; elements. Each policy has
a "name" attribute giving the name of the policy. The name is used to link a
policy and the zones signed using it; each policy must have a unique name.

    <Policy name="default">

The policy named "default" is special, as it is associated with all zones that
do not have a policy explicitly associated with them.

A policy can have a description associated with it.

    <Description>A default policy</Description>

## Signatures

This lists the parameters for the signatures created using the policy.

    <Signatures>
        <Resign>PT2H</Resign>
        <Refresh>P3D</Refresh>
        <Validity>
            <Default>P14D</Default>
            <Denial>P14D</Denial>
        </Validity>
        <Jitter>PT12H</Jitter>
        <InceptionOffset>PT300S</InceptionOffset>
    </Signatures>

Here:

1. &lt;Resign&gt; is the re-sign interval, which is the interval between runs of the Signer Engine.
1. &lt;Refresh&gt; is the refresh interval, detailing when a signature should be refreshed. As signatures are typically valid for much longer than the interval between runs of the signer, there is no need to re-generate the signatures each time the signer is run if there is no change to the data being signed. The signature will be refreshed when the time until the signature expiration is closer than the refresh interval. Set it to zero if you want to refresh the signatures each re-sign interval.
1. &lt;Validity&gt; groups two elements of information related to how long the signatures are valid for - &lt;Default&gt; is the validity interval for all RRSIG records except those related to NSEC or NSEC3 records. In this case, the validity period is given by the value in the &lt;Denial&gt; element.
1. &lt;Jitter&gt; is the value added to or extracted from the expiration time of signatures to ensure that not all signatures expire at the same time. The actual value of the &lt;Jitter&gt; element is the -j + r %2j, where j is the jitter value and r a random duration, uniformly ranging between -j and j, is added to signature validity period to get the signature expiration time.
1. &lt;InceptionOffset&gt; is a duration subtracted from the time at which a record is signed to give the start time of the record. This is required to allow for clock skew between the signing system and the system on which the signature is checked. Without it, the possibility exists that the checking system could retrieve a signature whose start time is later than the current time.

The relationship between these elements is shown [](#RFC6781), Figure 11.

## Authenticated Denial of Existence

Authenticated denial of existence is handled by the &lt;Denial&gt; section, as shown
in the example below.

    <Denial>
        <NSEC3>
            <TTL>PT3600S</TTL>
            <OptOut/>
            <Resalt>P100D</Resalt>
            <Hash>
                <Algorithm>1</Algorithm>
                <Iterations>5</Iterations>
                <Salt length="8"/>
            </Hash>
        </NSEC3>
    </Denial>

&lt;Denial&gt; includes one element, either &lt;NSEC3&gt; (as shown above) or &lt;NSEC&gt;.
The example above shows the NSEC3 [](#RFC5155) case.

### NSEC3

&lt;NSEC3&gt; tells the signer to implement NSEC3 scheme for authenticated denial of
existence. The elements are:

1. &lt;TTL&gt; - if present, this is the time-to-live value for the NSEC3PARAM resource records. If not present, PT0S (0) will be used as TTL.
1. &lt;OptOut/&gt; - if present, enable Opt-Out.
1. &lt;Resalt&gt; - the interval between generating new salt values for the hashing algorithm.
1. &lt;Algorithm&gt;, &lt;Iterations&gt; and &lt;Salt&gt; are parameters to the hash algorithm.

### NSEC

Should, instead, NSEC be used as the authenticated denial of existence scheme,
the &lt;Denial&gt; element will contain the single element &lt;NSEC/&gt;.

## Key Information

Parameters relating to keys can be found in the &lt;Keys&gt; section.

    <Keys>

### Common Parameters

The section starts with a number of parameters relating to both zone-signing
keys (ZSK) and key-signing keys (KSK):

    <TTL>PT3600S</TTL>
    <RetireSafety>PT3600S</RetireSafety>
    <PublishSafety>PT3600S</PublishSafety>
    <ShareKeys/>
    <Purge>P14D</Purge>

&lt;TTL&gt; is the time-to-live value for the DNSKEY resource records.
&lt;PublishSafety&gt; and &lt;RetireSafety&gt; are the publish and retire safety margins
for the keys. These intervals are safety margins added to calculated timing
values to give some extra time to cover unforeseen events, e.g. in case
external events prevent zone publication.

If multiple zones are associated with a policy, the presence of &lt;ShareKeys/&gt;
indicates that a key can be shared between zones.

If &lt;Purge&gt; is present, keys marked as dead will be automatically purged from
the database after this interval.

### Key-signing Keys

Key-Signing Keys

Parameters for key-signing keys are held in the &lt;KSK&gt; section:

    <KSK>
        <Algorithm length="2048">8</Algorithm>
        <Lifetime>P1Y</Lifetime>
        <Repository>softHSM</Repository>
        <Standby>1</Standby>
        <ManualRollover/>
    </KSK>

where:

1. &lt;Algorithm&gt; - determines the algorithm used for the key
1. &lt;Lifetime&gt; - determines how long the key is used for before it is rolled.
1. &lt;Repository&gt; - determines the location of the keys. Keys are stored in
   "repositories"
1. &lt;Standby&gt; - if present, determines the number of standby keys held in the
   zone.
1. &lt;ManualRollover/&gt; - if present, this indicates that the key rollover will
   only be initiated on the command by the operator.

### Zone-Signing Keys

Parameters for zone-signing keys are held in the &lt;ZSK&gt; section, and have the
same meaning as for the KSK:

    <ZSK>
        <Algorithm length="1024">8</Algorithm>
        <Lifetime>P90D</Lifetime>
        <Repository>softHSM</Repository>
        <Standby>1</Standby>
    </ZSK>

The ZSK information completes the contents of the &lt;Keys&gt; section and the keys
section can be closed.

    </Keys>

## Zone Information

General information concerning the zones can be found in the &lt;Zone&gt; section:

    <Zone>
        <PropagationDelay>PT9999S</PropagationDelay>
        <SOA>
            <TTL>PT3600S</TTL>
            <Minimum>PT3600S</Minimum>
            <Serial>unixtime</Serial>
        </SOA>
    </Zone>


&lt;PropagationDelay&gt; is the amount of time needed for information changes at the
master server for the zone to work its way through to all the secondary
nameservers.

The &lt;SOA&gt; element gives values of parameters for the SOA record in the signed
zone. 

The SOA values will override values set for the SOA record in the input zone
file and the serial in signed and unsigned zone is likely to go out of sync.

These SOA values are:

1. &lt;TTL&gt; - TTL of the SOA record.
2. &lt;Minimum&gt; - value for the SOA MINIMUM parameter.
3. &lt;Serial&gt; - the format of the serial number in the signed zone. 
   This is one of: counter, datecounter, unixtime, keep.

### Parent Zone Information

If a DNSSEC zone is in a chain of trust, digest information about the KSKs
used in the zone will be stored in DS records in the parent zone. To properly
roll keys, timing information about the parent zone must be configured in
the &lt;Parent&gt; section:

    <Parent>
        <PropagationDelay>PT9999S</PropagationDelay>
        <DS>
            <TTL>PT3600S</TTL>
        </DS>
        <SOA>
            <TTL>PT3600S</TTL>
            <Minimum>PT3600S</Minimum>
        </SOA>
    </Parent>

&lt;PropagationDelay&gt; is the interval between the time a new KSK is published in
the zone and the time that the DS record appears in the parent zone.

The &lt;DS&gt; tag holds information about the DS record in the parent. It contains
a single element, &lt;TTL&gt;, which should be set to the TTL of the DS record in
the parent zone.

&lt;SOA&gt; gives information about parameters of the parent's SOA record, used by
KASP in its calculations. As before, &lt;TTL&gt; is the TTL of the SOA record and
&lt;Minimum&gt; is the value of the SOA MINIMUM parameter.

This is the last section of the policy specification, so the next element is
the policy closing tag:

    </Policy>

If there are any additional policies, they could be entered here, starting
with &lt;Policy&gt; and ending with &lt;/Policy&gt;. However, in this case there are no
additional policies, so the file is ended by closing the &lt;KASP&gt; tag:

    </KASP>
